# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy the Blog

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  #  Runs on 0 AM every day of GMT+8 
  schedule:
  - cron: "10 0 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1 # v1.115.3
        with:
          ruby-version: '3.2.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Setup IndexNow # Generate files dynamically to prevent them from being leaked in public repositories.
        run: echo f8fc080f517d4f2e9211d0a276b04282 > f8fc080f517d4f2e9211d0a276b04282.txt
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
      - name: Ensure required gems are installed
        run: |
          if [ ! -f "Gemfile" ]; then
            echo 'source "https://rubygems.org"' > Gemfile
            echo 'gem "jekyll"' >> Gemfile
            echo 'gem "jekyll-last-modified-at"' >> Gemfile
          fi
          bundle install


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4